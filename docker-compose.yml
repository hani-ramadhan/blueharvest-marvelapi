# docker-compose.yml
version: '3'
x-airflow-common: &airflow-common
  image: apache/airflow:2.7.1
  environment: &airflow-common-env
    AIRFLOW__CORE__EXECUTOR: LocalExecutor
    AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    MARVEL_PUBLIC_KEY: ${MARVEL_PUBLIC_KEY}
    MARVEL_PRIVATE_KEY: ${MARVEL_PRIVATE_KEY}
    AIRFLOW__LOGGING__BASE_LOG_FOLDER: /opt/airflow/logs
    AIRFLOW__LOGGING__LOGGING_LEVEL: INFO
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs  # Add this line
    - ./data:/opt/airflow/data
  depends_on: &airflow-common-depends-on
    postgres:
      condition: service_healthy
  

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 5
    restart: always

  airflow-init:
    <<: *airflow-common
    entrypoint: /bin/bash
    command:
      - -c
      - |
        mkdir -p /logs /dags /plugins
        chown -R airflow:root /{logs,dags,plugins}
        airflow db init
        airflow users create \
          --username peterparker \
          --password spiderman \
          --firstname peter \
          --lastname parker \
          --role Admin \
          --email pparker@spiderman.com
    environment:
      <<: *airflow-common-env

  airflow-webserver:
    <<: *airflow-common
    command: airflow webserver
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  airflow-scheduler:
    <<: *airflow-common
    command: airflow scheduler
    healthcheck:
      test: ["CMD-SHELL", 'airflow jobs check --job-type SchedulerJob --hostname "$${HOSTNAME}"']
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    depends_on:
      <<: *airflow-common-depends-on
      airflow-init:
        condition: service_completed_successfully

  streamlit:
      build: 
        context: ./streamlit
        dockerfile: Dockerfile
      ports:
        - "8501:8501"
      volumes:
        - ./data:/app/data
      restart: always
      healthcheck:
        test: ["CMD", "curl", "--fail", "http://localhost:8501/_stcore/health"]
        interval: 30s
        timeout: 10s
        retries: 3